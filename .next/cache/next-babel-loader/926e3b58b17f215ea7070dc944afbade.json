{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Git/random-project/components/Home.js\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\"; // import ActionCreator from \"../redux/actionCreators\";\n\nconst showHomePhrase = ({\n  mainPhrase\n}) => __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 44\n  }\n}, mainPhrase);\n\nexport class HomeScreen extends Component {\n  // state = {\n  //   languageUser: {},\n  // }\n  // componentDidMount() {\n  //   //   const { languageUser } = this.state;\n  //   console.log(\"--- call init HOME props: \", this.props);\n  //   const { dispatch, translate } = this.props;\n  //   if (!translate || translate === {}) {\n  //     dispatch(ActionCreator.translationRequest(\"es\"));\n  //   }\n  // }\n  render() {\n    const {\n      translate\n    } = this.props;\n    const translationLoaded = !!translate && translate.translationLoaded || false;\n    const translation = !!translate && translate.translation || false;\n    console.log(\"--- Home render props: \", translation);\n    const screens = !!translation.translate ? translation.translate.screens : {};\n    const homepage = !!screens ? screens.homepage : {}; // if (!translationLoaded && !homepage) {\n    //   return <div>Loading translation...</div>\n    // }\n\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"miwebsite.com\"), homepage ? showHomePhrase(homepage) : null);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  translate: state.translate\n}); // const mapDispatchToProps = dispatch => ({\n//   translRequest: (lang, mode) => dispatch(ActionCreator.translationRequest(lang, mode)),\n// });\n// export default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\n\n\nexport default connect(mapStateToProps)(HomeScreen); // export default HomeScreen;","map":{"version":3,"sources":["/Users/macbook/Git/random-project/components/Home.js"],"names":["React","Component","Fragment","connect","showHomePhrase","mainPhrase","HomeScreen","render","translate","props","translationLoaded","translation","console","log","screens","homepage","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,UAAL,CAA3C;;AAEA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACAM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKC,KAA3B;AACA,UAAMC,iBAAiB,GAAI,CAAC,CAACF,SAAF,IAAeA,SAAS,CAACE,iBAA1B,IAAgD,KAA1E;AACA,UAAMC,WAAW,GAAI,CAAC,CAACH,SAAF,IAAeA,SAAS,CAACG,WAA1B,IAA0C,KAA9D;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,WAAvC;AAEA,UAAMG,OAAO,GAAG,CAAC,CAACH,WAAW,CAACH,SAAd,GAA0BG,WAAW,CAACH,SAAZ,CAAsBM,OAAhD,GAA0D,EAA1E;AACA,UAAMC,QAAQ,GAAG,CAAC,CAACD,OAAF,GAAYA,OAAO,CAACC,QAApB,GAA+B,EAAhD,CARO,CAUP;AACA;AACA;;AAEA,WACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGGA,QAAQ,GAAGX,cAAc,CAACW,QAAD,CAAjB,GAA8B,IAHzC,CADF;AAOD;;AAlCuC;;AAqC1C,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,SAAS,EAAES,KAAK,CAACT;AADiB,CAAZ,CAAxB,C,CAIA;AACA;AACA;AAEA;;;AACA,eAAeL,OAAO,CAACa,eAAD,CAAP,CAAyBV,UAAzB,CAAf,C,CACA","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\n// import ActionCreator from \"../redux/actionCreators\";\n\nconst showHomePhrase = ({ mainPhrase }) => <h2>{mainPhrase}</h2>;\n\nexport class HomeScreen extends Component {\n  // state = {\n  //   languageUser: {},\n  // }\n  // componentDidMount() {\n  //   //   const { languageUser } = this.state;\n  //   console.log(\"--- call init HOME props: \", this.props);\n  //   const { dispatch, translate } = this.props;\n\n  //   if (!translate || translate === {}) {\n  //     dispatch(ActionCreator.translationRequest(\"es\"));\n  //   }\n  // }\n  render() {\n    const { translate } = this.props;\n    const translationLoaded = (!!translate && translate.translationLoaded) || false;\n    const translation = (!!translate && translate.translation) || false;\n\n    console.log(\"--- Home render props: \", translation);\n\n    const screens = !!translation.translate ? translation.translate.screens : {};\n    const homepage = !!screens ? screens.homepage : {};\n\n    // if (!translationLoaded && !homepage) {\n    //   return <div>Loading translation...</div>\n    // }\n\n    return (\n      <Fragment>\n        <h1>miwebsite.com</h1>\n\n        {homepage ? showHomePhrase(homepage) : null}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: state.translate,\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   translRequest: (lang, mode) => dispatch(ActionCreator.translationRequest(lang, mode)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\nexport default connect(mapStateToProps)(HomeScreen);\n// export default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}